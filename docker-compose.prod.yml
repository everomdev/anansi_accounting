version: '3.2'

services:

#  api:
##    depends_on:
##      - pgsql
#    container_name: api
#    build: api
#    expose:
#      - 80
#    restart: always
#    volumes:
#      # Re-use local composer cache via host-volume
#      - ~/.composer-docker/cache:/root/.composer/cache:delegated
#      # Mount source-code for development
#      - ./:/app
#      - ./docker/php/custom-config.ini:/usr/local/etc/php/conf.d/custom-config.ini
#      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
#    labels:
#      - "traefik.enable=true"
#      - "traefik.docker.network=proxy"
#      - "traefik.http.routers.api-secure.entrypoints=websecure"
#      - "traefik.http.routers.api-secure.rule=Host(`api.example.com`)"


  backend:
    #    depends_on:
    #      - pgsql
    container_name: backend_costeo
    build: api
    expose:
      - 80
    restart: always
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app
      - ./docker/php/custom-config.ini:/usr/local/etc/php/conf.d/custom-config.ini
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.backend.rule=Host(`costeo.diagnosticopararestaurantes.com`)"
      - "traefik.http.routers.backend.entrypoints=http"
      - "traefik.http.routers.backend.service=backend"
      - "traefik.http.middlewares.backend-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.backend-redirectscheme.redirectscheme.permanent=false"
      - "traefik.http.routers.backend.middlewares=backend-redirectscheme"

      - "traefik.http.routers.backend-secure.rule=Host(`costeo.diagnosticopararestaurantes.com`)"
      - "traefik.http.routers.backend-secure.entrypoints=https"
      - "traefik.http.routers.backend-secure.service=backend"
      - "traefik.http.routers.backend-secure.tls=true"
      - "traefik.http.routers.backend-secure.tls.certresolver=letsencrypt"

      - "traefik.http.services.backend.loadbalancer.server.port=80"
      - "traefik.http.services.backend.loadbalancer.server.scheme=http"
      - "traefik.http.services.backend.loadbalancer.passhostheader=true"

  frontend:
    #    depends_on:
    #      - pgsql
    container_name: frontend_costeo
    build: api
    expose:
      - 80
    restart: always
    volumes:
      # Re-use local composer cache via host-volume
      - ~/.composer-docker/cache:/root/.composer/cache:delegated
      # Mount source-code for development
      - ./:/app
      - ./docker/php/custom-config.ini:/usr/local/etc/php/conf.d/custom-config.ini
      - ./docker/php/xdebug.ini:/usr/local/etc/php/conf.d/xdebug.ini
    labels:
      - "traefik.enable=true"

      - "traefik.http.routers.frontend.rule=Host(`admincosteo.diagnosticopararestaurantes.com`)"
      - "traefik.http.routers.frontend.entrypoints=http"
      - "traefik.http.routers.frontend.service=frontend"
      - "traefik.http.middlewares.frontend-redirectscheme.redirectscheme.scheme=https"
      - "traefik.http.middlewares.frontend-redirectscheme.redirectscheme.permanent=false"
      - "traefik.http.routers.frontend.middlewares=backend-redirectscheme"

      - "traefik.http.routers.frontend-secure.rule=Host(`admincosteo.diagnosticopararestaurantes.com`)"
      - "traefik.http.routers.frontend-secure.entrypoints=https"
      - "traefik.http.routers.frontend-secure.service=frontend"
      - "traefik.http.routers.frontend-secure.tls=true"
      - "traefik.http.routers.frontend-secure.tls.certresolver=letsencrypt"

      - "traefik.http.services.frontend.loadbalancer.server.port=80"
      - "traefik.http.services.frontend.loadbalancer.server.scheme=http"
      - "traefik.http.services.frontend.loadbalancer.passhostheader=true"

  redis:
    image: "redis:alpine"
    command: redis-server --requirepass hrLmooHxLCIa
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/var/lib/redis
    #      - $PWD/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      - REDIS_REPLICATION_MODE=master

volumes:
  redis_data:

networks:
  default:
    external:
      name: proxy
