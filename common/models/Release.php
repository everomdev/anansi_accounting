<?php

namespace common\models;

use Yii;

/**
 * This is the model class for table "release".
 *
 * @property int $id
 * @property int $stock_id
 * @property float $quantity
 * @property string $date
 * @property string|null $observations
 *
 * @property IngredientStock $stock
 */
class Release extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'release';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['stock_id', 'quantity', 'date'], 'required'],
            [['stock_id'], 'integer'],
            [['quantity'], 'number'],
            [['date'], 'safe'],
            [['observations'], 'string'],
            [['stock_id'], 'exist', 'skipOnError' => true, 'targetClass' => IngredientStock::className(), 'targetAttribute' => ['stock_id' => 'id']],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => Yii::t('app', 'ID'),
            'stock_id' => Yii::t('app', 'Ingredient'),
            'quantity' => Yii::t('app', 'Quantity'),
            'date' => Yii::t('app', 'Date'),
            'observations' => Yii::t('app', 'Observations'),
        ];
    }

    public function afterSave($insert, $changedAttributes)
    {
        parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub

        $ingredient = $this->stock;
        if ($insert) {
            $ingredient->quantity -= $this->quantity;
            $ingredient->save();
        } elseif (!empty($changedAttributes['quantity']) and $changedAttributes['quantity'] != $this->quantity) {
            $diff = abs($changedAttributes['quantity'] - $this->quantity);
            if ($changedAttributes['quantity'] > $this->quantity) {
                $ingredient->quantity += $diff;
            } else {
                $ingredient->quantity -= $diff;
            }

            $ingredient->save();
        }
    }

    /**
     * Gets query for [[Stock]].
     *
     * @return \yii\db\ActiveQuery
     */
    public function getStock()
    {
        return $this->hasOne(IngredientStock::className(), ['id' => 'stock_id']);
    }
}
